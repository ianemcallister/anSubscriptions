var ahNuts=angular.module("ansub",["ui.bootstrap"]);function mainController(s,e,t,n){var o={name:{first:"",last:""},address:{street1:"",street2:"",street3:"",city:"",state:"",zip:""},contact:{},relationship:""},i={yearly:[{id:1,name:"Treat",shipDay:"",billDay:""}],quarterly:[{id:1,name:"Winter",shipDay:"",billDay:""},{id:2,name:"Spring",shipDay:"",billDay:""},{id:3,name:"Summer",shipDay:"",billDay:""},{id:4,name:"Fall",shipDay:"",billDay:""}],monthly:[{id:1,name:"January",shipDay:"3rd",billDay:"1st"},{id:2,name:"February",shipDay:"3rd",billDay:"1st"},{id:3,name:"March",shipDay:"3rd",billDay:"1st"},{id:4,name:"April",shipDay:"3rd",billDay:"1st"},{id:5,name:"May",shipDay:"3rd",billDay:"1st"},{id:6,name:"June",shipDay:"3rd",billDay:"1st"},{id:7,name:"July",shipDay:"3rd",billDay:"1st"},{id:8,name:"August",shipDay:"3rd",billDay:"1st"},{id:9,name:"September",shipDay:"3rd",billDay:"1st"},{id:10,name:"October",shipDay:"3rd",billDay:"1st"},{id:11,name:"November",shipDay:"3rd",billDay:"1st"},{id:12,name:"December",shipDay:"3rd",billDay:"1st"}],weekly:function(){for(var e=[],t=1;t<=52;t++){var n="Week "+t;e.push({id:t,name:n,shipDay:"Tuesday",billDay:"Friday"})}return e}()};function r(t){var e=Object.create(o),n=!1,i=0,r=0;return s.userData.recipiantList.forEach(function(e){e.relationship==t&&(n=!0,i=r),r++}),n||(e.relationship=t,s.userData.recipiantList.push(e)),i}function a(t){var n=0;return s.userData.recipiantList.forEach(function(e){e.relationship==t&&s.userData.recipiantList.splice(n,1),n++}),0}function c(e){s.state.selectedRecipiant=e}s.flavors=[{name:"Secret Recipe Pecans",description:" "},{name:"Secret Recipe Almonds",description:" "},{name:"Secret Recipe Cashews",description:" "},{name:"Secret Recipe Peanuts",description:" "},{name:"Cinnamon Pecans",description:" "},{name:"Cinnamon Almonds",description:" "},{name:"Drunken Pecans",description:" "},{name:"Mix-It-Up",description:" "}],s.orderSchedule=[{id:1}],s.userData={name:{first:"",last:""},contact:{email:"",phone:""},shippingDestination:{street:"",city:"",state:"",zip:""},order:[]},s.state={tempRecipiant:{name:{first:"",last:""},address:{street1:"",street2:"",street3:"",city:"",state:"",zip:""},contact:{email:"",phone:""},relationship:""},order:{qty:"1",visibility:{one:!0,two:!1,three:!1,four:!1}},frequency:{value:"monthly"},shippingDestinations:"1",recipientsBox:"1",recipiantSelected:{state:!1,id:""},subType:{},selectedRecipiant:0,errors:{missingRequired:!1}},s.updateOrderVisiblity=function(t){var n={one:1,two:2,three:3,four:4};Object.keys(s.state.order.visibility).forEach(function(e){s.state.order.visibility[e]=n[e]<=t})},s.updateFrequency=function(e){s.userData.shippingSchedule=i[e]},s.updateOrderSchedule=function(e){},s.updateSubType=function(e){"myself"==(s.userData.subType=e)?(r("Myself"),a("Someone"),c(0)):"others"==e?(r("Someone"),a("Myself"),c(0)):"both"==e&&(r("Myself"),r("Someone"),c(0))},s.selectRecipiant=function(e){c(e),s.state.tempRecipiant=s.userData.recipiantList[e]},s.updateRecipiantValues=function(){var e=s.state.selectedRecipiant;s.userData.recipiantList[e]=s.state.tempRecipiant},s.validateForm=function(){console.log("validating form",s.userData),s.state.errors.missingRequired=!0,n.submit(s.userData).then(function(e){console.log("got this response",e)}).catch(function(e){})}}function contactInput(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/contactInput.htm",replace:!0,scope:{firstname:"=",lastname:"=",phone:"=",email:"="},link:t,controller:n,controllerAs:"vm",bindToController:!0};function t(e,t,n,i){}function n(e,t){console.log("in contactInputtController")}return n.$inject=["$scope","$log"],e}function frequencySelection(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/frequencySelection.htm",replace:!0,scope:{},link:t,controller:n,controllerAs:"vm",bindToController:!0};function t(e,t,n,i){}function n(e,t){this.frequencies=["month","quarter","year"],this.starts={month:["January","February","March","April","May","June","July","August","September","October","November","December"],quarter:["Winter","Spring","Summer","Fall"],year:["2018","2019","2020"]},this.selectedFrequency="",this.startsIn="",console.log("in frequencySelectionController")}return n.$inject=["$scope","$log"],e}function productSelection(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/productSelection.htm",replace:!0,scope:{userorder:"="},link:t,controller:n,controllerAs:"vm",bindToController:!0};function t(e,t,n,i){}function n(e,t){var i=this,n={id:1,flavor:"",mixflvrCount:0,mixflvrs:{srpec:{id:"srpec",name:"Secret Recipe Pecans",selected:!1,classes:{"list-group-item":!0,active:!1}},sralm:{id:"sralm",name:"Secret Recipe Almonds",selected:!1,classes:{"list-group-item":!0,active:!1}},srcsh:{id:"srcsh",name:"Secret Recipe Cashews",selected:!1,classes:{"list-group-item":!0,active:!1}},srpea:{id:"srpea",name:"Secret Recipe Peanuts",selected:!1,classes:{"list-group-item":!0,active:!1}},cnpec:{id:"cnpec",name:"Cinnamon Pecans",selected:!1,classes:{"list-group-item":!0,active:!1}},cnalm:{id:"cnalm",name:"Cinnamon Almonds",selected:!1,classes:{"list-group-item":!0,active:!1}},drpec:{id:"drpec",name:"Drunken Pecans",selected:!1,classes:{"list-group-item":!0,active:!1}}}};function r(){i.order.total=i.orderList.length*i.productPrice-i.order.discounts,4==i.orderList.length&&(i.order.total=i.order.total-i.productPrice)}i.state={addAProductBtn:{classes:{btn:!0,"btn-success":!0,"btn-warning":!1},visible:!0},removeLastProductBtn:{classes:{btn:!0,"btn-success":!1,"btn-warning":!1,"btn-danger":!0},visible:!1},headerStyle:{color:"rgb(51,51,51)"},flavorsVisible:!1,sectionComplete:!1,showtandc:!1},i.flavors=[{name:"Secret Recipe Pecans",description:"Sweet and Salty"},{name:"Secret Recipe Almonds",description:"Sweet and Salty"},{name:"Secret Recipe Cashews",description:"Sweet and Salty"},{name:"Secret Recipe Peanuts",description:"Sweet and Salty"},{name:"Cinnamon Pecans",description:"Bavarian"},{name:"Cinnamon Almonds",description:"Bavarian"},{name:"Drunken Pecans",description:"Savory"},{name:"Mix-It-Up",description:"Whatever You Like"}],i.orderList=[],i.productPrice=17,i.order={discounts:0,shipping:0,total:0},console.log("in productSelectionController"),i.addAProduct=function(){var e=i.orderList.length;e<4&&i.orderList.push(Object.create(n)),3==e&&(i.state.addAProductBtn.visible=!1),0<e&&(i.state.removeLastProductBtn.visible=!0);for(var t=0;t<=e;t++)i.orderList[t].id=t+1;r()},i.removeLastProduct=function(){var e=i.orderList.length,t=e-1;1<e&&i.orderList.splice(t,1),2==e&&(i.state.removeLastProductBtn.visible=!1),i.state.addAProductBtn.visible=!0,4==e&&(i.order.discounts=0),r()},i.removeAProduct=function(e){var t=e-1;1<i.orderList.length&&i.orderList.splice(t,1);for(var n=0;n<=i.orderList.length-1;n++)i.orderList[n].id=n+1;r()},i.validateProducts=function(){},i.countMixFlavors=function(t){var n=0;return Object.keys(t).forEach(function(e){t[e].selected&&n++}),n},i.updateShoppingCart=function(){i.userorder=i.orderList},i.orderList.push(Object.create(n)),r()}return n.$inject=["$scope","$log"],e}function shipDest(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",template:"<div>testing</div>",replace:!0,scope:{},link:t,controller:n,controllerAs:"vm",bindToController:!0};function t(e,t,n,i){}function n(e,t,n){this.zipCheck=n,console.log("in shipDestController")}return n.$inject=["$scope","$log","zipcomplete"],e}function singleAddressInput(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/singleAddressInput.htm",replace:!0,scope:{address:"="},link:t,controller:n,controllerAs:"vm",bindToController:!0};function t(e,t,n,i){}function n(e,t){console.log("in singleAddressInputController")}return n.$inject=["$scope","$log"],e}function subTermsCond(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/subTermsCond.htm",replace:!0,scope:{},link:t,controller:n,controllerAs:"vm",bindToController:!0};function t(e,t,n,i){}function n(e,t){console.log("in subTermsCondController")}return n.$inject=["$scope","$log"],e}function modalService(e){var r={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"partials/modal.htm"},s={closeButtonText:"Close",actionButtonText:"OK",headerText:"Proceed?",bodyText:"Perform this action?"};this.showModal=function(e,t){return e||(e={}),e.backdrop="static",this.show(e,t)},this.show=function(e,t){var n={},i={};return angular.extend(n,r,e),angular.extend(i,s,t),n.controller||(n.controller=function(e,t){e.modalOptions=i,e.modalOptions.ok=function(e){t.close(e)},e.modalOptions.close=function(e){t.dismiss("cancel")}}),$modal.open(n).result}}function submissionService(i){this.submit=function(e){return console.log("submitting",e),new Promise(function(t,n){i({method:"POST",url:"/subscription-application-submission",headers:{"Content-Type":"application/json"},data:e}).then(function(e){t(e)},function(e){n(e)})})}}function zipcomplete(){this.handleResp=function(e){e.error_msg?console.log(e.error_msg):"city"in e&&(container.find("input[name='city']").val(e.city),container.find("input[name='state']").val(e.state))},this.checkZip=function(e){var t=e.substring(0,5);5==t.length&&/^[0-9]+$/.test(t)&&console.log("checking zip",t)}}angular.module("ansub").controller("mainController",mainController),mainController.$inject=["$scope","$log","modalService","submissionService"],angular.module("ansub").directive("contactInput",contactInput),angular.module("ansub").directive("frequencySelection",frequencySelection),angular.module("ansub").directive("productSelection",productSelection),angular.module("ansub").directive("shipDest",shipDest),angular.module("ansub").directive("singleAddressInput",singleAddressInput),angular.module("ansub").directive("subTermsCond",subTermsCond),angular.module("ansub").service("modalService",modalService),modalService.$inject=["$uibModal"],angular.module("ansub").service("submissionService",submissionService),submissionService.$inject=["$http"],angular.module("ansub").service("zipcomplete",zipcomplete),zipcomplete.$inject=[];
//# sourceMappingURL=data:application/json;charset=utf8;base64,
